[
    {
        "q": ".", 
        "out": [
            "Hello, world!"
        ], 
        "in": "Hello, world!"
    }, 
    {
        "q": ".foo", 
        "out": [
            42
        ], 
        "in": {
            "foo": 42, 
            "bar": "less interesting data"
        }
    }, 
    {
        "q": ".foo", 
        "out": [
            null
        ], 
        "in": {
            "alsonotfoo": false, 
            "notfoo": true
        }
    }, 
    {
        "q": ".[\"foo\"]", 
        "out": [
            42
        ], 
        "in": {
            "foo": 42
        }
    }, 
    {
        "q": ".foo?", 
        "out": [
            42
        ], 
        "in": {
            "foo": 42, 
            "bar": "less interesting data"
        }
    }, 
    {
        "q": ".foo?", 
        "out": [
            null
        ], 
        "in": {
            "alsonotfoo": false, 
            "notfoo": true
        }
    }, 
    {
        "q": ".[\"foo\"]?", 
        "out": [
            42
        ], 
        "in": {
            "foo": 42
        }
    }, 
    {
        "q": "[.foo?]", 
        "out": [
            []
        ], 
        "in": [
            1, 
            2
        ]
    }, 
    {
        "q": ".[0]", 
        "out": [
            {
                "good": true, 
                "name": "JSON"
            }
        ], 
        "in": [
            {
                "good": true, 
                "name": "JSON"
            }, 
            {
                "good": false, 
                "name": "XML"
            }
        ]
    }, 
    {
        "q": ".[2]", 
        "out": [
            null
        ], 
        "in": [
            {
                "good": true, 
                "name": "JSON"
            }, 
            {
                "good": false, 
                "name": "XML"
            }
        ]
    }, 
    {
        "q": ".[2:4]", 
        "out": [
            [
                "c", 
                "d"
            ]
        ], 
        "in": [
            "a", 
            "b", 
            "c", 
            "d", 
            "e"
        ]
    }, 
    {
        "q": ".[2:4]", 
        "out": [
            "cd"
        ], 
        "in": "abcdefghi"
    }, 
    {
        "q": ".[:3]", 
        "out": [
            [
                "a", 
                "b", 
                "c"
            ]
        ], 
        "in": [
            "a", 
            "b", 
            "c", 
            "d", 
            "e"
        ]
    }, 
    {
        "q": ".[-2:]", 
        "out": [
            [
                "d", 
                "e"
            ]
        ], 
        "in": [
            "a", 
            "b", 
            "c", 
            "d", 
            "e"
        ]
    }, 
    {
        "q": ".[]", 
        "out": [
            {
                "good": true, 
                "name": "JSON"
            }, 
            {
                "good": false, 
                "name": "XML"
            }
        ], 
        "in": [
            {
                "good": true, 
                "name": "JSON"
            }, 
            {
                "good": false, 
                "name": "XML"
            }
        ]
    }, 
    {
        "q": ".[]", 
        "out": [], 
        "in": []
    }, 
    {
        "q": ".[]", 
        "out": [
            1, 
            1
        ], 
        "in": {
            "a": 1, 
            "b": 1
        }
    }, 
    {
        "q": ".foo, .bar", 
        "out": [
            42, 
            "something else"
        ], 
        "in": {
            "baz": true, 
            "foo": 42, 
            "bar": "something else"
        }
    }, 
    {
        "q": ".user, .projects[]", 
        "out": [
            "stedolan", 
            "jq", 
            "wikiflow"
        ], 
        "in": {
            "user": "stedolan", 
            "projects": [
                "jq", 
                "wikiflow"
            ]
        }
    }, 
    {
        "q": ".[4,2]", 
        "out": [
            "e", 
            "c"
        ], 
        "in": [
            "a", 
            "b", 
            "c", 
            "d", 
            "e"
        ]
    }, 
    {
        "q": ".[] | .name", 
        "out": [
            "JSON", 
            "XML"
        ], 
        "in": [
            {
                "good": true, 
                "name": "JSON"
            }, 
            {
                "good": false, 
                "name": "XML"
            }
        ]
    }, 
    {
        "q": "[.user, .projects[]]", 
        "out": [
            [
                "stedolan", 
                "jq", 
                "wikiflow"
            ]
        ], 
        "in": {
            "user": "stedolan", 
            "projects": [
                "jq", 
                "wikiflow"
            ]
        }
    }, 
    {
        "q": "{user, title: .titles[]}", 
        "out": [
            {
                "user": "stedolan", 
                "title": "JQ Primer"
            }, 
            {
                "user": "stedolan", 
                "title": "More JQ"
            }
        ], 
        "in": {
            "titles": [
                "JQ Primer", 
                "More JQ"
            ], 
            "user": "stedolan"
        }
    }, 
    {
        "q": "{(.user): .titles}", 
        "out": [
            {
                "stedolan": [
                    "JQ Primer", 
                    "More JQ"
                ]
            }
        ], 
        "in": {
            "titles": [
                "JQ Primer", 
                "More JQ"
            ], 
            "user": "stedolan"
        }
    }, 
    {
        "q": ".a + 1", 
        "out": [
            8
        ], 
        "in": {
            "a": 7
        }
    }, 
    {
        "q": ".a + .b", 
        "out": [
            [
                1, 
                2, 
                3, 
                4
            ]
        ], 
        "in": {
            "a": [
                1, 
                2
            ], 
            "b": [
                3, 
                4
            ]
        }
    }, 
    {
        "q": ".a + null", 
        "out": [
            1
        ], 
        "in": {
            "a": 1
        }
    }, 
    {
        "q": ".a + 1", 
        "out": [
            1
        ], 
        "in": {}
    }, 
    {
        "q": "{a: 1} + {b: 2} + {c: 3} + {a: 42}", 
        "out": [
            {
                "a": 42, 
                "c": 3, 
                "b": 2
            }
        ], 
        "in": null
    }, 
    {
        "q": "4 - .a", 
        "out": [
            1
        ], 
        "in": {
            "a": 3
        }
    }, 
    {
        "q": ". - [\"xml\", \"yaml\"]", 
        "out": [
            [
                "json"
            ]
        ], 
        "in": [
            "xml", 
            "yaml", 
            "json"
        ]
    }, 
    {
        "q": "10 / . * 3", 
        "out": [
            6
        ], 
        "in": 5
    }, 
    {
        "q": ". / \", \"", 
        "out": [
            [
                "a", 
                "b,c,d", 
                "e"
            ]
        ], 
        "in": "a, b,c,d, e"
    }, 
    {
        "q": "{\"k\": {\"a\": 1, \"b\": 2}} * {\"k\": {\"a\": 0,\"c\": 3}}", 
        "out": [
            {
                "k": {
                    "a": 0, 
                    "c": 3, 
                    "b": 2
                }
            }
        ], 
        "in": null
    }, 
    {
        "q": ".[] | length", 
        "out": [
            2, 
            6, 
            1, 
            0
        ], 
        "in": [
            [
                1, 
                2
            ], 
            "string", 
            {
                "a": 2
            }, 
            null
        ]
    }, 
    {
        "q": "keys", 
        "out": [
            [
                "Foo", 
                "abc", 
                "abcd"
            ]
        ], 
        "in": {
            "abcd": 2, 
            "abc": 1, 
            "Foo": 3
        }
    }, 
    {
        "q": "keys", 
        "out": [
            [
                0, 
                1, 
                2
            ]
        ], 
        "in": [
            42, 
            3, 
            35
        ]
    }, 
    {
        "q": "map(has(\"foo\"))", 
        "out": [
            [
                true, 
                false
            ]
        ], 
        "in": [
            {
                "foo": 42
            }, 
            {}
        ]
    }, 
    {
        "q": "map(has(2))", 
        "out": [
            [
                false, 
                true
            ]
        ], 
        "in": [
            [
                0, 
                1
            ], 
            [
                "a", 
                "b", 
                "c"
            ]
        ]
    }, 
    {
        "q": "del(.foo)", 
        "out": [
            {
                "baz": 42, 
                "bar": 9001
            }
        ], 
        "in": {
            "baz": 42, 
            "foo": 42, 
            "bar": 9001
        }
    }, 
    {
        "q": "del(.[1, 2])", 
        "out": [
            [
                "foo"
            ]
        ], 
        "in": [
            "foo", 
            "bar", 
            "baz"
        ]
    }, 
    {
        "q": "to_entries", 
        "out": [
            [
                {
                    "value": 1, 
                    "key": "a"
                }, 
                {
                    "value": 2, 
                    "key": "b"
                }
            ]
        ], 
        "in": {
            "a": 1, 
            "b": 2
        }
    }, 
    {
        "q": "from_entries", 
        "out": [
            {
                "a": 1, 
                "b": 2
            }
        ], 
        "in": [
            {
                "value": 1, 
                "key": "a"
            }, 
            {
                "value": 2, 
                "key": "b"
            }
        ]
    }, 
    {
        "q": "with_entries(.key |= \"KEY_\" + .)", 
        "out": [
            {
                "KEY_a": 1, 
                "KEY_b": 2
            }
        ], 
        "in": {
            "a": 1, 
            "b": 2
        }
    }, 
    {
        "q": "map(select(. >= 2))", 
        "out": [
            [
                5, 
                3, 
                7
            ]
        ], 
        "in": [
            1, 
            5, 
            3, 
            0, 
            7
        ]
    }, 
    {
        "q": ".[]|numbers", 
        "out": [
            1
        ], 
        "in": [
            [], 
            {}, 
            1, 
            "foo", 
            null, 
            true, 
            false
        ]
    }, 
    {
        "q": "1, empty, 2", 
        "out": [
            1, 
            2
        ], 
        "in": null
    }, 
    {
        "q": "[1,2,empty,3]", 
        "out": [
            [
                1, 
                2, 
                3
            ]
        ], 
        "in": null
    }, 
    {
        "q": "map(.+1)", 
        "out": [
            [
                2, 
                3, 
                4
            ]
        ], 
        "in": [
            1, 
            2, 
            3
        ]
    }, 
    {
        "q": "[paths]", 
        "out": [
            [
                [
                    0
                ], 
                [
                    1
                ], 
                [
                    1, 
                    0
                ], 
                [
                    1, 
                    1
                ], 
                [
                    1, 
                    1, 
                    "a"
                ]
            ]
        ], 
        "in": [
            1, 
            [
                [], 
                {
                    "a": 2
                }
            ]
        ]
    }, 
    {
        "q": "[paths(scalars)]", 
        "out": [
            [
                [
                    0
                ], 
                [
                    1, 
                    1, 
                    "a"
                ]
            ]
        ], 
        "in": [
            1, 
            [
                [], 
                {
                    "a": 2
                }
            ]
        ]
    }, 
    {
        "q": "add", 
        "out": [
            "abc"
        ], 
        "in": [
            "a", 
            "b", 
            "c"
        ]
    }, 
    {
        "q": "add", 
        "out": [
            6
        ], 
        "in": [
            1, 
            2, 
            3
        ]
    }, 
    {
        "q": "add", 
        "out": [
            null
        ], 
        "in": []
    }, 
    {
        "q": "any", 
        "out": [
            true
        ], 
        "in": [
            true, 
            false
        ]
    }, 
    {
        "q": "any", 
        "out": [
            false
        ], 
        "in": [
            false, 
            false
        ]
    }, 
    {
        "q": "any", 
        "out": [
            false
        ], 
        "in": []
    }, 
    {
        "q": "all", 
        "out": [
            false
        ], 
        "in": [
            true, 
            false
        ]
    }, 
    {
        "q": "all", 
        "out": [
            true
        ], 
        "in": [
            true, 
            true
        ]
    }, 
    {
        "q": "all", 
        "out": [
            true
        ], 
        "in": []
    }, 
    {
        "q": "flatten", 
        "out": [
            [
                1, 
                2, 
                3
            ]
        ], 
        "in": [
            1, 
            [
                2
            ], 
            [
                [
                    3
                ]
            ]
        ]
    }, 
    {
        "q": "flatten(1)", 
        "out": [
            [
                1, 
                2, 
                [
                    3
                ]
            ]
        ], 
        "in": [
            1, 
            [
                2
            ], 
            [
                [
                    3
                ]
            ]
        ]
    }, 
    {
        "q": "flatten", 
        "out": [
            []
        ], 
        "in": [
            []
        ]
    }, 
    {
        "q": "flatten", 
        "out": [
            [
                {
                    "foo": "bar"
                }, 
                {
                    "foo": "baz"
                }
            ]
        ], 
        "in": [
            {
                "foo": "bar"
            }, 
            [
                {
                    "foo": "baz"
                }
            ]
        ]
    }, 
    {
        "q": "range(2;4)", 
        "out": [
            2, 
            3
        ], 
        "in": null
    }, 
    {
        "q": "[range(2;4)]", 
        "out": [
            [
                2, 
                3
            ]
        ], 
        "in": null
    }, 
    {
        "q": "[range(4)]", 
        "out": [
            [
                0, 
                1, 
                2, 
                3
            ]
        ], 
        "in": null
    }, 
    {
        "q": "floor", 
        "out": [
            3
        ], 
        "in": 3.14159
    }, 
    {
        "q": "sqrt", 
        "out": [
            3
        ], 
        "in": 9
    }, 
    {
        "q": ".[] | tonumber", 
        "out": [
            1, 
            1
        ], 
        "in": [
            1, 
            "1"
        ]
    }, 
    {
        "q": ".[] | tostring", 
        "out": [
            "1", 
            "1", 
            "[1]"
        ], 
        "in": [
            1, 
            "1", 
            [
                1
            ]
        ]
    }, 
    {
        "q": "map(type)", 
        "out": [
            [
                "number", 
                "boolean", 
                "array", 
                "object", 
                "null", 
                "string"
            ]
        ], 
        "in": [
            0, 
            false, 
            [], 
            {}, 
            null, 
            "hello"
        ]
    }, 
    {
        "q": "sort", 
        "out": [
            [
                null, 
                3, 
                6, 
                8
            ]
        ], 
        "in": [
            8, 
            3, 
            null, 
            6
        ]
    }, 
    {
        "q": "sort(.foo)", 
        "out": [
            [
                {
                    "foo": 2, 
                    "bar": 1
                }, 
                {
                    "foo": 3, 
                    "bar": 100
                }, 
                {
                    "foo": 4, 
                    "bar": 10
                }
            ]
        ], 
        "in": [
            {
                "foo": 4, 
                "bar": 10
            }, 
            {
                "foo": 3, 
                "bar": 100
            }, 
            {
                "foo": 2, 
                "bar": 1
            }
        ]
    }, 
    {
        "q": "group(.foo)", 
        "out": [
            [
                [
                    {
                        "foo": 1, 
                        "bar": 10
                    }, 
                    {
                        "foo": 1, 
                        "bar": 1
                    }
                ], 
                [
                    {
                        "foo": 3, 
                        "bar": 100
                    }
                ]
            ]
        ], 
        "in": [
            {
                "foo": 1, 
                "bar": 10
            }, 
            {
                "foo": 3, 
                "bar": 100
            }, 
            {
                "foo": 1, 
                "bar": 1
            }
        ]
    }, 
    {
        "q": "min", 
        "out": [
            2
        ], 
        "in": [
            5, 
            4, 
            2, 
            7
        ]
    }, 
    {
        "q": "max(.foo)", 
        "out": [
            {
                "foo": 2, 
                "bar": 3
            }
        ], 
        "in": [
            {
                "foo": 1, 
                "bar": 14
            }, 
            {
                "foo": 2, 
                "bar": 3
            }
        ]
    }, 
    {
        "q": "unique", 
        "out": [
            [
                1, 
                2, 
                3, 
                5
            ]
        ], 
        "in": [
            1, 
            2, 
            5, 
            3, 
            5, 
            3, 
            1, 
            3
        ]
    }, 
    {
        "q": "unique(.foo)", 
        "out": [
            [
                {
                    "foo": 1, 
                    "bar": 2
                }, 
                {
                    "foo": 4, 
                    "bar": 5
                }
            ]
        ], 
        "in": [
            {
                "foo": 1, 
                "bar": 2
            }, 
            {
                "foo": 1, 
                "bar": 3
            }, 
            {
                "foo": 4, 
                "bar": 5
            }
        ]
    }, 
    {
        "q": "unique(length)", 
        "out": [
            [
                "bacon", 
                "chunky", 
                "asparagus"
            ]
        ], 
        "in": [
            "chunky", 
            "bacon", 
            "kitten", 
            "cicada", 
            "asparagus"
        ]
    }, 
    {
        "q": "reverse", 
        "out": [
            [
                4, 
                3, 
                2, 
                1
            ]
        ], 
        "in": [
            1, 
            2, 
            3, 
            4
        ]
    }, 
    {
        "q": "contains(\"bar\")", 
        "out": [
            true
        ], 
        "in": "foobar"
    }, 
    {
        "q": "contains([\"baz\", \"bar\"])", 
        "out": [
            true
        ], 
        "in": [
            "foobar", 
            "foobaz", 
            "blarp"
        ]
    }, 
    {
        "q": "contains([\"bazzzzz\", \"bar\"])", 
        "out": [
            false
        ], 
        "in": [
            "foobar", 
            "foobaz", 
            "blarp"
        ]
    }, 
    {
        "q": "contains({foo: 12, bar: [{barp: 12}]})", 
        "out": [
            true
        ], 
        "in": {
            "foo": 12, 
            "bar": [
                1, 
                2, 
                {
                    "barp": 12, 
                    "blip": 13
                }
            ]
        }
    }, 
    {
        "q": "contains({foo: 12, bar: [{barp: 15}]})", 
        "out": [
            false
        ], 
        "in": {
            "foo": 12, 
            "bar": [
                1, 
                2, 
                {
                    "barp": 12, 
                    "blip": 13
                }
            ]
        }
    }, 
    {
        "q": "indices(\", \")", 
        "out": [
            [
                3, 
                7, 
                12
            ]
        ], 
        "in": "a,b, cd, efg, hijk"
    }, 
    {
        "q": "indices(1)", 
        "out": [
            [
                1, 
                3, 
                5
            ]
        ], 
        "in": [
            0, 
            1, 
            2, 
            1, 
            3, 
            1, 
            4
        ]
    }, 
    {
        "q": "indices([1,2])", 
        "out": [
            [
                1, 
                8
            ]
        ], 
        "in": [
            0, 
            1, 
            2, 
            3, 
            1, 
            4, 
            2, 
            5, 
            1, 
            2, 
            6, 
            7
        ]
    }, 
    {
        "q": "index(\", \")", 
        "out": [
            3
        ], 
        "in": "a,b, cd, efg, hijk"
    }, 
    {
        "q": "rindex(\", \")", 
        "out": [
            12
        ], 
        "in": "a,b, cd, efg, hijk"
    }, 
    {
        "q": "[.[]|startswith(\"foo\")]", 
        "out": [
            [
                false, 
                true, 
                false, 
                true, 
                false
            ]
        ], 
        "in": [
            "fo", 
            "foo", 
            "barfoo", 
            "foobar", 
            "barfoob"
        ]
    }, 
    {
        "q": "[.[]|endswith(\"foo\")]", 
        "out": [
            [
                false, 
                true
            ]
        ], 
        "in": [
            "foobar", 
            "barfoo"
        ]
    }, 
    {
        "q": "match(\"(abc)+\"; \"g\")", 
        "out": [
            {
                "captures": [
                    {
                        "length": 3, 
                        "string": "abc", 
                        "name": null, 
                        "offset": 0
                    }
                ], 
                "length": 3, 
                "string": "abc", 
                "offset": 0
            }, 
            {
                "captures": [
                    {
                        "length": 3, 
                        "string": "abc", 
                        "name": null, 
                        "offset": 4
                    }
                ], 
                "length": 3, 
                "string": "abc", 
                "offset": 4
            }
        ], 
        "in": "abc abc"
    }, 
    {
        "q": "match(\"foo\")", 
        "out": [
            {
                "captures": [], 
                "length": 3, 
                "string": "foo", 
                "offset": 0
            }
        ], 
        "in": "foo bar foo"
    }, 
    {
        "q": "match([\"foo\", \"ig\"])", 
        "out": [
            {
                "captures": [], 
                "length": 3, 
                "string": "foo", 
                "offset": 0
            }, 
            {
                "captures": [], 
                "length": 3, 
                "string": "FOO", 
                "offset": 8
            }
        ], 
        "in": "foo bar FOO"
    }, 
    {
        "q": "match(\"foo (?<bar123>bar)? foo\"; \"ig\")", 
        "out": [
            {
                "captures": [
                    {
                        "length": 3, 
                        "string": "bar", 
                        "name": "bar123", 
                        "offset": 4
                    }
                ], 
                "length": 11, 
                "string": "foo bar foo", 
                "offset": 0
            }, 
            {
                "captures": [
                    {
                        "length": 0, 
                        "string": null, 
                        "name": "bar123", 
                        "offset": -1
                    }
                ], 
                "length": 8, 
                "string": "foo  foo", 
                "offset": 12
            }
        ], 
        "in": "foo bar foo foo  foo"
    }, 
    {
        "q": "test(\"foo\")", 
        "out": [
            true
        ], 
        "in": "foo"
    }, 
    {
        "q": "test(\"foo\"; \"i\")", 
        "out": [
            true
        ], 
        "in": "Foo"
    }, 
    {
        "q": "test(\"foo\")", 
        "out": [
            false
        ], 
        "in": "bar"
    }, 
    {
        "q": "[.[]|ltrimstr(\"foo\")]", 
        "out": [
            [
                "fo", 
                "", 
                "barfoo", 
                "bar", 
                "afoo"
            ]
        ], 
        "in": [
            "fo", 
            "foo", 
            "barfoo", 
            "foobar", 
            "afoo"
        ]
    }, 
    {
        "q": "[.[]|rtrimstr(\"foo\")]", 
        "out": [
            [
                "fo", 
                "", 
                "bar", 
                "foobar", 
                "foob"
            ]
        ], 
        "in": [
            "fo", 
            "foo", 
            "barfoo", 
            "foobar", 
            "foob"
        ]
    }, 
    {
        "q": "explode", 
        "out": [
            [
                102, 
                111, 
                111, 
                98, 
                97, 
                114
            ]
        ], 
        "in": "foobar"
    }, 
    {
        "q": "implode", 
        "out": [
            "ABC"
        ], 
        "in": [
            65, 
            66, 
            67
        ]
    }, 
    {
        "q": "split(\", \")", 
        "out": [
            [
                "a", 
                "b,c,d", 
                "e"
            ]
        ], 
        "in": "a, b,c,d, e"
    }, 
    {
        "q": "join(\", \")", 
        "out": [
            "a, b,c,d, e"
        ], 
        "in": [
            "a", 
            "b,c,d", 
            "e"
        ]
    }, 
    {
        "q": "recurse(.foo[])", 
        "out": [
            {
                "foo": [
                    {
                        "foo": []
                    }, 
                    {
                        "foo": [
                            {
                                "foo": []
                            }
                        ]
                    }
                ]
            }, 
            {
                "foo": []
            }, 
            {
                "foo": [
                    {
                        "foo": []
                    }
                ]
            }, 
            {
                "foo": []
            }
        ], 
        "in": {
            "foo": [
                {
                    "foo": []
                }, 
                {
                    "foo": [
                        {
                            "foo": []
                        }
                    ]
                }
            ]
        }
    }, 
    {
        "q": "recurse", 
        "out": [
            {
                "a": 0, 
                "b": [
                    1
                ]
            }, 
            0, 
            [
                1
            ], 
            1
        ], 
        "in": {
            "a": 0, 
            "b": [
                1
            ]
        }
    }, 
    {
        "q": "..|.a?", 
        "out": [
            1
        ], 
        "in": [
            [
                {
                    "a": 1
                }
            ]
        ]
    }, 
    {
        "q": "\"The input was \\(.), which is one less than \\(.+1)\"", 
        "out": [
            "The input was 42, which is one less than 43"
        ], 
        "in": 42
    }, 
    {
        "q": "[.[]|tostring]", 
        "out": [
            [
                "1", 
                "foo", 
                "[\"foo\"]"
            ]
        ], 
        "in": [
            1, 
            "foo", 
            [
                "foo"
            ]
        ]
    }, 
    {
        "q": "[.[]|tojson]", 
        "out": [
            [
                "1", 
                "\"foo\"", 
                "[\"foo\"]"
            ]
        ], 
        "in": [
            1, 
            "foo", 
            [
                "foo"
            ]
        ]
    }, 
    {
        "q": "[.[]|tojson|fromjson]", 
        "out": [
            [
                1, 
                "foo", 
                [
                    "foo"
                ]
            ]
        ], 
        "in": [
            1, 
            "foo", 
            [
                "foo"
            ]
        ]
    }, 
    {
        "q": "@html", 
        "out": [
            "This works if x &lt; y"
        ], 
        "in": "This works if x < y"
    }, 
    {
        "q": "@sh \"echo \\(.)\"", 
        "out": [
            "echo 'O'\\''Hara'\\''s Ale'"
        ], 
        "in": "O'Hara's Ale"
    }, 
    {
        "q": ".[] == 1", 
        "out": [
            true, 
            true, 
            false, 
            false
        ], 
        "in": [
            1, 
            1.0, 
            "1", 
            "banana"
        ]
    }, 
    {
        "q": "if . == 0 then\n  \"zero\"\nelif . == 1 then\n  \"one\"\nelse\n  \"many\"\nend", 
        "out": [
            "many"
        ], 
        "in": 2
    }, 
    {
        "q": ". < 5", 
        "out": [
            true
        ], 
        "in": 2
    }, 
    {
        "q": "42 and \"a string\"", 
        "out": [
            true
        ], 
        "in": null
    }, 
    {
        "q": "(true, false) or false", 
        "out": [
            true, 
            false
        ], 
        "in": null
    }, 
    {
        "q": "(true, true) and (true, false)", 
        "out": [
            true, 
            false, 
            true, 
            false
        ], 
        "in": null
    }, 
    {
        "q": "[true, false | not]", 
        "out": [
            [
                false, 
                true
            ]
        ], 
        "in": null
    }, 
    {
        "q": ".foo // 42", 
        "out": [
            19
        ], 
        "in": {
            "foo": 19
        }
    }, 
    {
        "q": ".foo // 42", 
        "out": [
            42
        ], 
        "in": {}
    }, 
    {
        "q": ".bar as $x | .foo | . + $x", 
        "out": [
            210
        ], 
        "in": {
            "foo": 10, 
            "bar": 200
        }
    }, 
    {
        "q": ". as $i|[(.*2|. as $i| $i), $i]", 
        "out": [
            [
                10, 
                5
            ]
        ], 
        "in": 5
    }, 
    {
        "q": "def addvalue(f): . + [f]; map(addvalue(.[0]))", 
        "out": [
            [
                [
                    1, 
                    2, 
                    1
                ], 
                [
                    10, 
                    20, 
                    10
                ]
            ]
        ], 
        "in": [
            [
                1, 
                2
            ], 
            [
                10, 
                20
            ]
        ]
    }, 
    {
        "q": "def addvalue(f): f as $x | map(. + $x); addvalue(.[0])", 
        "out": [
            [
                [
                    1, 
                    2, 
                    1, 
                    2
                ], 
                [
                    10, 
                    20, 
                    1, 
                    2
                ]
            ]
        ], 
        "in": [
            [
                1, 
                2
            ], 
            [
                10, 
                20
            ]
        ]
    }, 
    {
        "q": "reduce .[] as $item (0; . + $item)", 
        "out": [
            20
        ], 
        "in": [
            10, 
            2, 
            5, 
            3
        ]
    }, 
    {
        "q": ".foo += 1", 
        "out": [
            {
                "foo": 43
            }
        ], 
        "in": {
            "foo": 42
        }
    }
]