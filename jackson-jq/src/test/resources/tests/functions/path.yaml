- q: 'path(null)'
  out:
  - []
  v: '[1.5,1.5]'
  failing: true
- q: 'path(.a.b[])'
  in: {a: {b: [1,2]}}
  out:
  - [a, b, 0]
  - [a, b, 1]
- q: '{} | try path(.[0]) catch .'
  out:
  - 'Cannot index object with number'
- q: '[] | try path(.a) catch .'
  out:
  - 'Cannot index array with string "a"'
- q: '1 | try path(.[]) catch .'
  out:
  - 'Cannot iterate over number (1)'

- q: 'try path(.a | .c?) catch .'
  in: {a: []}
  out: []
- q: 'try path(.a | .c) catch .'
  in: {a: []}
  out:
  - "Cannot index array with string \"c\""
- q: 'try path([] | .c?) catch .'
  in: {a: []}
  out:
  - "Invalid path expression near attempt to access element \"c\" of []"
- q: 'try path([] | .c) catch .'
  in: {a: []}
  out:
  - "Invalid path expression near attempt to access element \"c\" of []"

- q: 'try path(.a | .[0]) catch .'
  in: {a: 1}
  out:
  - "Cannot index number with number"
- q: 'try path(.a | .[0]?) catch .'
  in: {a: 1}
  out: []
- q: 'try path(1 | .[0]) catch .'
  out:
  - "Invalid path expression near attempt to access element 0 of 1"
- q: 'try path(1 | .[0]?) catch .'
  out:
  - "Invalid path expression near attempt to access element 0 of 1"

- q: 'try path(.a | .[0:1]) catch .'
  in: {a: 1}
  out:
  - "Cannot index number with object"
- q: 'try path(.a | .[0:1]?) catch .'
  in: {a: 1}
  out: []
- q: 'try path(1 | .[0:1]) catch .'
  out:
  - "Invalid path expression near attempt to access element {\"start\":0,... of 1"
- q: 'try path(1 | .[0:1]?) catch .'
  out:
  - "Invalid path expression near attempt to access element {\"start\":0,... of 1"

- q: 'try path(.a | .[]) catch .'
  in: {a: 1}
  out:
  - "Cannot iterate over number (1)"
- q: 'try path(.a | .[]?) catch .'
  in: {a: 1}
  out: []
- q: 'try path(1 | .[]) catch .'
  out:
  - "Invalid path expression near attempt to iterate through 1"
- q: 'try path(1 | .[]?) catch .'
  out:
  - "Invalid path expression near attempt to iterate through 1"
- q: 'try (path([1,2,3,4,5,6,7,8,9][])) catch .'
  out:
  - "Invalid path expression near attempt to iterate through [1,2,3,4,5,6,7,8,9]"
- q: 'try (path("longer string not truncated")) catch .'
  out:
  - "Invalid path expression with result \"longer string not truncated\""
