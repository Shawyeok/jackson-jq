- q: '([10, 20], 10, []) | @tsv?'
  out:
  - "10\t20"
  - ''
- q: '(10, {a: 10}) | to_entries?'
  out:
  - [{key: a, value: 10}]
- q: to_entries
  in: [61, 62]
  out:
  - [{key: 0, value: 61}, {key: 1, value: 62}]
  v: '[1.5,1.5]'
- q: '"foo\("a", error("b"), "c")"?'
  out:
  - fooa
- q: '{a: 10, b: (1, error("b"), 3)}?'
  out:
  - {a: 10, b: 1}
- q: '[1, error(2), 3]?'
  out: []
- q: '0?, 1?, true?, false?, null?'
  out:
  - 0
  - 1
  - true
  - false
  - null
- q: '1,2,3 as $a | $a?'
  out:
  - 1
  - 2
  - 3
- q: '({a: 10}).a??????'
  out:
  - 10
- q: '[10]??????'
  out:
  - [10]
- q: ({a:{b:[{c:10}]}}).a?.b?[0]?.c?
  out:
  - 10
- q: '1,2,3 | label $out | if . == 2 then break $out? else . end'
  out:
  - 1
  - 3
  failing: true
  justification: "? after break lebals does nothing. It doesn't do any good to readability, either."
- q: '1,2,3 | label $out | if . == 2 then break $out??? else . end'
  out:
  - 1
  - 3
  failing: true
  justification: "? after break lebals does nothing. It doesn't do any good to readability, either."
